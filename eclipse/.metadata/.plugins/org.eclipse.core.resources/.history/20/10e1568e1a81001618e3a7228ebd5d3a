package com.derf.btawc.items.tools;

import com.derf.btawc.items.ItemBasic;

import cpw.mods.fml.common.eventhandler.Event.Result;
import net.minecraft.block.Block;
import net.minecraft.entity.EntityLivingBase;
import net.minecraft.entity.player.EntityPlayer;
import net.minecraft.init.Blocks;
import net.minecraft.item.ItemStack;
import net.minecraft.world.World;
import net.minecraftforge.common.MinecraftForge;
import net.minecraftforge.event.entity.player.UseHoeEvent;

public class ItemHoeOfGreed extends ItemBasic {

	protected int size;
	protected int count;
	
	public ItemHoeOfGreed(String name, int maxDamage, int size, int count) {
		super(name);
		this.setMaxStackSize(1);
		this.setMaxDamage(maxDamage);
	}

	@Override
	public boolean onItemUse(
			ItemStack stack, 
			EntityPlayer player, 
			World world, 
			int x,
			int y, 
			int z, 
			int side, 
			float tx, 
			float ty, 
			float tz) {
		
		
		boolean b = false;
		
		if(!player.canPlayerEdit(x, y, z, side, stack)) {
			b = false;
		} else {
			UseHoeEvent event = new UseHoeEvent(player, stack, world, x, y, z);
			if(MinecraftForge.EVENT_BUS.post(event)) {
				return false;
			}
			
			if(event.getResult() == Result.ALLOW) {
				stack.damageItem(1, player);
			}
			
			Block block = world.getBlock(x, y, z);
			
			if(side != 0 && world.getBlock(x, y+1, z).isAir(world, x, y+1, z) && (block == Blocks.grass || block == Blocks.dirt)) {
				Block temp = Blocks.farmland;
				world.playSoundEffect(
						x+0.5f, 
						y+1, 
						z, 
						temp.stepSound.getStepResourcePath(), 
						(temp.stepSound.getVolume() + 1) * 0.5f, 
						temp.stepSound.getPitch() * 0.8f);
			}
		}
		return b;
	}

	protected void onHoeUsed(ItemStack stack, 
			EntityPlayer player, 
			World world, 
			int x,
			int y, 
			int z, 
			int side) {
		boolean b = false;
		UseHoeEvent event = new UseHoeEvent(player, stack, world, x, y, z);
		if(MinecraftForge.EVENT_BUS.post(event)) {
			return;
		}
		
		if(event.getResult() == Result.ALLOW) {
			stack.damageItem(1, player);
		}
		
		Block block = world.getBlock(x, y, z);
		
		if(side != 0 && world.getBlock(x, y+1, z).isAir(world, x, y+1, z) && (block == Blocks.grass || block == Blocks.dirt)) {
			Block temp = Blocks.farmland;
			world.playSoundEffect(
					x+0.5f, 
					y+1, 
					z, 
					temp.stepSound.getStepResourcePath(), 
					(temp.stepSound.getVolume() + 1) * 0.5f, 
					temp.stepSound.getPitch() * 0.8f);
		}
		
		return b;
	}
	@Override
	public boolean onBlockDestroyed(
			ItemStack stack, 
			World world, 
			Block block, 
			int x,
			int y, 
			int z, 
			EntityLivingBase entity) {
		
		return super.onBlockDestroyed(stack, world, block, x, y, z, entity);
	}

	@Override
	public boolean isFull3D() {
		return true;
	}
}
