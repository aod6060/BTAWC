package com.derf.btawc.recipe;

import java.util.ArrayList;
import java.util.List;

import net.minecraft.block.Block;
import net.minecraft.item.Item;
import net.minecraft.item.ItemStack;

public class AlloyRecipe {
	// Input Stuff
	private ItemStack input1 = null;
	private ItemStack input2 = null;
	private ItemStack input3 = null;
	private ItemStack input4 = null;
	
	// Blocks and Items
	public AlloyRecipe(Block block1, Block block) {
		this(
				Item.getItemFromBlock(block1),
				Item.getItemFromBlock(block2)
		);
	}
	
	public AlloyRecipe(Item item1, Item item2) {
		this(
				new ItemStack(item1),
				new ItemStack(item2)
		);
	}
	
	public AlloyRecipe(ItemStack input1, ItemStack input2) {
		this(
				input1, 
				input2, 
				null
		);
	}
	
	// Blocks and Items
	public AlloyRecipe(Block block1, Block block2, Block block3) {
		this(
				Item.getItemFromBlock(block1),
				Item.getItemFromBlock(block2),
				Item.getItemFromBlock(block3)
		);
	}
	
	public AlloyRecipe(Item item1, Item item2, Item item3) {
		this(
				new ItemStack(item1),
				new ItemStack(item2),
				new ItemStack(item3)
		);
	}
	
	public AlloyRecipe(ItemStack input1, ItemStack input2, ItemStack input3) {
		this(
				input1, 
				input2, 
				input3, 
				null
		);
	}
	
	
	
	// Blocks and Items
	public AlloyRecipe(Block block1, Block block2, Block block3, Block block4) {
		this(
				Item.getItemFromBlock(block1),
				Item.getItemFromBlock(block2),
				Item.getItemFromBlock(block3),
				Item.getItemFromBlock(block4)
		);
	}
	
	public AlloyRecipe(Item item1, Item item2, Item item3, Item item4) {
		this(
				new ItemStack(item1),
				new ItemStack(item2),
				new ItemStack(item3),
				new ItemStack(item4)
		);
	}
	
	public AlloyRecipe(ItemStack input1, ItemStack input2, ItemStack input3, ItemStack input4) {	
		this.input1 = input1;
		this.input2 = input2;
		this.input3 = input3;
		this.input4 = input4;
	}
	
	public ItemStack getInput1() {
		return input1;
	}
	
	public ItemStack getInput2() {
		return input2;
	}
	
	public ItemStack getInput3() {
		return input3;
	}
	
	public ItemStack getInput4() {
		return input4;
	}
	
	public ItemStack getResult() {
		return result;
	}
	
	public List<ItemStack> getInputs() {
		List<ItemStack> temp = new ArrayList<ItemStack>();
		temp.add(input1);
		temp.add(input2);
		temp.add(input3);
		temp.add(input4);
		return temp;
	}
}
